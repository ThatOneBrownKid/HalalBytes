<%= javascript_include_tag 'resturant_index', defer: true, type: "module" %>
<%= javascript_importmap_tags %>
<head>
</head>
<body id="resturantpage" style="background-color: #FFFFFF;">
  <%= render '/restaurants/partials/filters'%>
  <div class="row g-0">
    <div class="col-md-7 border-end right-shadow " id="restaurants-container" >
      <!-- Restaurants section -->
      <div id="restaurants">
        <%= render partial: 'restaurants/partials/restaurant', collection: @restaurants.select { |restaurant| restaurant.keep == nil }, as: :restaurant %>
      </div>
    </div>
    <!-- Map Section -->
    <div class="z-2 col-md-5 sticky-top" id="map" style="top: 50px;"></div>
  </div>
  <div class="offcanvas offcanvas-bottom" id="restaurantsOffcanvas" style="height: 80vh; overflow-y: auto; display: none;">
    <div class="offcanvas-header sticky-top bg-light">
      <h5 class="offcanvas-title">Restaurants</h5>
      <button type="button" class="btn-close text-reset" id="closeOffcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body" >
      <div id="restaurants-mobile">
        <%= render partial: 'restaurants/partials/restaurant', collection: @restaurants.select { |restaurant| restaurant.keep == nil }, as: :restaurant %>
      </div>
    </div>
  </div>
  <!-- Button to Trigger Offcanvas -->
  <button class="btn d-md-none restaurants-button" id="toggleOffcanvas" style="position: fixed; bottom: 33px; right: 20px; z-index: 49; color: white;">
    Show Restaurants
  </button>
  <script>
    window.geoapifyApiKey = "<%= ENV['GEOAPIFY_API_KEY'] %>";

     document.addEventListener('turbo:load', function () {
      const offcanvasElement = document.getElementById('restaurantsOffcanvas');
      const toggleButton = document.getElementById('toggleOffcanvas');
      const closeButton = document.getElementById('closeOffcanvas');

      // Show the offcanvas
      toggleButton.addEventListener('click', function () {
    offcanvasElement.style.display = 'block'; // Make offcanvas visible
    setTimeout(() => offcanvasElement.classList.add('show'), 10); // Add show class for animation
      });

      // Hide the offcanvas
      closeButton.addEventListener('click', function () {
    offcanvasElement.classList.remove('show'); // Remove show class
    setTimeout(() => offcanvasElement.style.display = 'none', 300); // Hide after transition
      });
    });
    window.addEventListener("popstate", getFiltersFromHash); // doesnt work currently
  </script>
  <!-- JavaScript to initialize Leaflet map and add layers -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
  <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
  <script src="https://unpkg.com/leaflet-providers@latest/leaflet-providers.js"></script>
</body>
<style>
  /* Default (desktop view) */
  @media (max-width: 768px) {
  .restaurants-button {
  background-color: #DC3445;
  border-color: #DC3445;
  }
  #restaurants-container {
  display: none; /* Hide desktop restaurant container on mobile */
  }
  .offcanvas {
  display: none !important; /* Force it to be hidden initially */
  transition: transform 0.3s ease-in-out; /* Smooth transition */
  }
  .offcanvas.show {
  display: block !important; /* Show it when the "show" class is added */
  transform: translateY(0);
  }
  #map {
  height: 90vh;
  width: 100%;
  z-index: 0; /* Background layer */
  }
  }
  @media (min-width: 768px) {
  #restaurants-container {
  position: relative;
  height: auto;
  display: block; /* Show normally */
  transition: transform 0.3s ease-in-out;
  }
  #map {
  height: 95vh;  /* Set the height to 100% of the viewport height */
  }
  /* Ensure the map takes full screen width on small devices */
  }
  .selected {
  border: 10px solid #E8E8E8; /* Blue border */
  background-color: transparent; /* No fill */
  transition: border 0.3s ease, box-shadow 0.3s ease; /* Include box-shadow in transition */
  color: black; /* Text color */
  box-shadow: 0 -4px 10px rgba(0, 123, 255, 0.5),  /* Shadow at the top */
  0 4px 10px rgba(0, 123, 255, 0.5);  /* Shadow at the bottom */
  }
  .right-shadow {
  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.2);
  position: relative; /* Establishes a stacking context for z-index */
  z-index: 3; /* Ensures shadow appears above the map */
  }
  .static-map {
  position: -webkit-sticky; /* Safari */
  position: sticky;
  top: 0;
  }
  @media (max-width: 3000px) {
  .filter-img {
  width: 70  px;
  height: 50px;
  }
  }
  @media (min-width: 1600px) {
  .card {
  align-items: center;
  }
  }
  .card::-webkit-scrollbar {
  display: none;
  }
  .accordion-button:focus {
  box-shadow: none;
  background-color: white;
  border-color: rgba(0,0,0,.125);
  }
  .accordion-button:not(.collapsed){
  box-shadow: none;
  background-color: white;
  border-color: rgba(0,0,0,.125);
  }
  .modal-backdrop.fade {
  opacity: 0;
  }
  .modal-backdrop {
  --bs-backdrop-zindex: 0;
  }
  .accordion-button{
  display:block;
  }
  .offcanvas, .offcanvas-lg, .offcanvas-md, .offcanvas-sm, .offcanvas-xl, .offcanvas-xxl {
  --bs-offcanvas-zindex: 1045;
  --bs-offcanvas-width: 400px;
  --bs-offcanvas-height: 20vh;
  --bs-offcanvas-padding-x: 1rem;
  --bs-offcanvas-padding-y: 1rem;
  --bs-offcanvas-color: var(--bs-body-color);
  --bs-offcanvas-bg: var(--bs-body-bg);
  --bs-offcanvas-border-width: var(--bs-border-width);
  --bs-offcanvas-border-color: var(--bs-border-color-translucent);
  --bs-offcanvas-box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
  --bs-offcanvas-transition: transform 0.3s ease-in-out;
  --bs-offcanvas-title-line-height: 1.5;
  }
</style>
